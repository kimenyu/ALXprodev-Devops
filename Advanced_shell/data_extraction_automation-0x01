#!/bin/bash

# Define the API endpoint and the Pok√©mon name
API_URL="https://pokeapi.co/api/v2/pokemon"
POKEMON="pikachu"

# Define the output and error files
OUTPUT_FILE="data.json"
ERROR_FILE="errors.txt"

# Make the API request and handle errors
response=$(curl -s -w "%{http_code}" -o "$OUTPUT_FILE" "$API_URL/$POKEMON")
http_status=$(tail -n 1 <<< "$response")

# Check the HTTP status code
if [ "$http_status" -ne 200 ]; then
  echo "Error: Failed to fetch data for $POKEMON. HTTP status: $http_status" >> "$ERROR_FILE"
  echo "Response body: $(cat $OUTPUT_FILE)" >> "$ERROR_FILE"
  rm -f "$OUTPUT_FILE"  # Remove partial output file if request fails
  exit 1
fi

# Remove the status code appended to the output file
truncate -s -3 "$OUTPUT_FILE"

# Extract specific data using jq, awk, and sed
NAME=$(jq -r '.name' "$OUTPUT_FILE")
HEIGHT=$(jq -r '.height' "$OUTPUT_FILE" | awk '{print $1 / 10}')
WEIGHT=$(jq -r '.weight' "$OUTPUT_FILE" | awk '{print $1 / 10}')
TYPE=$(jq -r '.types[0].type.name' "$OUTPUT_FILE")

# Format the output
OUTPUT_STRING=$(echo "$NAME is of type $TYPE, weighs ${WEIGHT}kg, and is ${HEIGHT}m tall." | sed 's/^./\U&/')

# Print the result
echo "$OUTPUT_STRING"

# Success message
echo "Data for $POKEMON successfully saved to $OUTPUT_FILE."
